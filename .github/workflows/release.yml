on:
  push:
    tags:
      - 'v*'

name: Create Release

jobs:
  # Prepares new GitHub release for the tag and exposes required variables for dependent jobs
  prepare-release:
    name: Create Release
    runs-on: ubuntu-20.04
    outputs:
      tag: ${{ steps.vars.outputs.tag }}
      version: ${{ steps.vars.outputs.version }}
      upload_url:  ${{ steps.create_release.outputs.upload_url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set Version
        id: vars
        run: |
          RELEASE_TAG=${GITHUB_REF#refs/*/}
          echo ::set-output name=tag::${RELEASE_TAG}
          echo ::set-output name=version::${RELEASE_TAG:1}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.vars.outputs.tag }}
          release_name: Release ${{ steps.vars.outputs.tag }}
          body: Experimental release
          draft: true
          prerelease: false

  # Builds project and uploads artifacts to the release
  build-and-upload:
    name: Build and upload artifacts
    needs: prepare-release
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Build project
        run: chmod +x ./gradlew && ./gradlew assemble

      - name: Upload Main Jar
        id: upload-main-jar
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.prepare-release.outputs.upload_url }}
          asset_path: ./build/libs/dns-client-${{ needs.prepare-release.outputs.version }}.jar
          asset_name: dns-client-${{ needs.prepare-release.outputs.version }}.jar
          asset_content_type: application/java-archive

      - name: Upload Javadocs
        id: upload-javadocs
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.prepare-release.outputs.upload_url }}
          asset_path: ./build/libs/dns-client-${{ needs.prepare-release.outputs.version }}.jar
          asset_name: dns-client-${{ needs.prepare-release.outputs.version }}-javadocs.jar
          asset_content_type: application/java-archive